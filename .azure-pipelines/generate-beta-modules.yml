# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Generates a release build artifact (nuget) from HEAD of master for beta Graph workload modules.
name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src/Beta/*
    - config/ModulesMapping.jsonc
pr: none
variables:
  MODULE_PREFIX: 'Microsoft.Graph'
  WORKLOAD_MODULE_PATH: 'src\beta\'
  ARTIFACT_DIRECTORY: '$(Build.ArtifactStagingDirectory)\MGPowerShell\'
  AUTH_MODULE_PATH: 'src\Authentication\Authentication\bin\'
  AUTH_MODULE_DLL_PATTERN: 'Microsoft.Graph.Authentication.dll'
  MODULE_MAPPING_CONFIG_BETA_PATH: '$(System.DefaultWorkingDirectory)/config/ModulesMappingBeta.jsonc'
  BUILD_NUMBER: $[format('{0:yyMMddHHmm}', pipeline.startTime)]
  PS_DEV_FEED: PowerShellFeed

jobs:
- job: MSGraphPSSDKGeneration
  displayName: MS Graph PS SDK Beta Generation
  timeoutInMinutes: 360
  pool:
    vmImage: 'windows-latest'

  steps:
  # Install Node
  - task: NodeTool@0
    displayName: Node install
    inputs:
      versionSpec: '13.14.0'
  
  - task: Npm@1
    displayName: 'Install AutoRest'
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest'
  
  - task: NuGetToolInstaller@1
    displayName: 'Install Nuget'
  
  - task: PowerShell@2
    displayName: 'Build Auth Modules'
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/tools/GenerateAuthenticationModule.ps1'
      arguments: '-ArtifactsLocation $(Build.ArtifactStagingDirectory) -Build -BuildWhenEqual -EnableSigning'
      pwsh: true
  
  - task: PowerShell@2
    displayName: 'Generate and Build Graph Resource Modules'
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/tools/GenerateModules.ps1'
      arguments: ' -Build'
      pwsh: true
    enabled: false
    
  - task: PowerShell@2
    displayName: 'Pack Modules'
    inputs:
      targetType: 'inline'
      script: |
        [HashTable] $ModuleMapping = Get-Content $(MODULE_MAPPING_CONFIG_BETA_PATH) | ConvertFrom-Json -AsHashTable
        $ModuleMapping.Keys | ForEach-Object {
            $ModuleName = $_
            $ModuleProjectDir = "$(System.DefaultWorkingDirectory)/src/$ModuleName/$ModuleName"
            & $(System.DefaultWorkingDirectory)/tools/PackModule.ps1 -Module $ModuleName -ArtifactsLocation $(ARTIFACT_DIRECTORY)
        }
      pwsh: true
    enabled: false
  
  - task: NuGetAuthenticate@0
    displayName: 'NuGet Authenticate'
  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      publishVstsFeed: 'fcaf8b61-0c0d-4f11-926c-53e6d753fd77/PowerShell_Feed'
      allowPackageConflicts: true
    enabled: false
      
  - task: PowerShell@2
    displayName: 'Register Package Feed'
    inputs:
     targetType: inline
     script: |
        $V2 = 'https://pkgs.dev.azure.com/peterombwa0832/fcaf8b61-0c0d-4f11-926c-53e6d753fd77/_packaging/PowerShell_Feed/nuget/v2'
        $Params = @{
            'Name' = '$(PS_DEV_FEED)'
            'InstallationPolicy' = 'Trusted'
            'SourceLocation' = $V2
        }
        Register-PSRepository @Params
     pwsh: true
  
  - task: PowerShell@2
    displayName: 'Register Package Feed'
    inputs:
     targetType: inline
     script: |
        Find-Module Microsoft.Graph.People -Repository $(PS_DEV_FEED)
     pwsh: true
  
  - task: GitHubComment@0
    displayName: 'Update: GitHub PR'
    inputs:
      comment: 'Install-Module with build number $(BUILD_NUMBER) from $(PS_DEV_FEED) to test.'
      gitHubConnection: 'github.com_peombwa'
      repositoryName: '$(Build.Repository.Name)'
      id: '$(System.PullRequest.PullRequestId)'
  
  - task: PowerShell@2
    displayName: 'Register Package Feed'
    inputs:
     targetType: inline
     script: |
        Install-Module Microsoft.Graph.People -Repository PowerShellFeed
     pwsh: true
    enabled: false
  
  # - task: PublishBuildArtifacts@1
  #   displayName: Publish Artifact Beta Modules
  #   inputs:
  #     PathtoPublish: '$(ARTIFACT_DIRECTORY)'
  #     ArtifactName: 'drop'
  #     publishLocation: 'Container'